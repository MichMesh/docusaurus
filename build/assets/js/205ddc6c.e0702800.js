"use strict";(self.webpackChunkmichmesh=self.webpackChunkmichmesh||[]).push([[336],{3177:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Reticulum/Getting_Started","title":"Getting_Started","description":"Setup","source":"@site/docs/Reticulum/Getting_Started.md","sourceDirName":"Reticulum","slug":"/Reticulum/Getting_Started","permalink":"/docs/Reticulum/Getting_Started","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installation and configuration of the Mosquitto MQTT server","permalink":"/docs/Meshtastic/mqtt server"}}');var r=t(4848),o=t(8453);const l={},c=void 0,s={},a=[{value:"Setup",id:"setup",level:2},{value:"You will probably want to create a python venv specifically for reticulum stuff.",id:"you-will-probably-want-to-create-a-python-venv-specifically-for-reticulum-stuff",level:3},{value:"load the new python venv",id:"load-the-new-python-venv",level:3},{value:"install rns, lxmfd",id:"install-rns-lxmfd",level:3},{value:"edit ~/.reticulum/config",id:"edit-reticulumconfig",level:3},{value:"Clients",id:"clients",level:2},{value:"nomadnet",id:"nomadnet",level:3},{value:"meshchat",id:"meshchat",level:3},{value:"Sideband",id:"sideband",level:3},{value:"Radio interfaces",id:"radio-interfaces",level:2},{value:"LoRa",id:"lora",level:3},{value:"HF FreeDV-TNC2 6.792mhz - in flux",id:"hf-freedv-tnc2-6792mhz---in-flux",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsx)(n.h3,{id:"you-will-probably-want-to-create-a-python-venv-specifically-for-reticulum-stuff",children:"You will probably want to create a python venv specifically for reticulum stuff."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"cd ~/ ; python -m venv reticulum"})}),"\n",(0,r.jsx)(n.h3,{id:"load-the-new-python-venv",children:"load the new python venv"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:". ~/reticulum/bin/activate"})}),"\n",(0,r.jsx)(n.h3,{id:"install-rns-lxmfd",children:"install rns, lxmfd"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"pip install --upgrade rns lxmf\n"})}),"\n",(0,r.jsx)(n.p,{children:"Start rnsd to generate the config files, then ctrl-c out:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"rnsd\n^c\n"})}),"\n",(0,r.jsx)(n.h3,{id:"edit-reticulumconfig",children:"edit ~/.reticulum/config"}),"\n",(0,r.jsx)(n.p,{children:"Use the following to configure your machine as a bridge to all on the same subnet with the michmesh test net. This test net is also connected to the Chicago test net, which is connected to a European test net. The connection to the euro net will likely be dropped once we get a critical mass of services running."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[reticulum]\n  enable_transport = True\n  share_instance = Yes\n  shared_instance_port = 37428\n  instance_control_port = 37429\n  panic_on_interface_error = No\n[logging]\n  loglevel = 4\n[interfaces]\n  [[Default Interface]]\n    type = AutoInterface\n    enabled = Yes\n    name = Default Interface\n    selected_interface_mode = 1\n    configured_bitrate = None\n  [[michmesh TCP]]\n    type = TCPClientInterface\n    interface_enabled = true\n    target_host = rns.michmesh.net\n    target_port = 7822\n    name = michmesh TCP\n    selected_interface_mode = 1\n    configured_bitrate = None\n"})}),"\n",(0,r.jsx)(n.h2,{id:"clients",children:"Clients"}),"\n",(0,r.jsx)(n.h3,{id:"nomadnet",children:"nomadnet"}),"\n",(0,r.jsxs)(n.p,{children:["If you want to install the console based nomadnet:\n",(0,r.jsx)(n.code,{children:"pip install nomadnet"})]}),"\n",(0,r.jsx)(n.h3,{id:"meshchat",children:"meshchat"}),"\n",(0,r.jsxs)(n.p,{children:["If you prefer a web based interface, use meshchat. You can install from the ",(0,r.jsx)(n.a,{href:"https://github.com/liamcottle/reticulum-meshchat/releases",children:"releases"})," section of the ",(0,r.jsx)(n.a,{href:"https://github.com/liamcottle/reticulum-meshchat",children:"meshchat repo"})," or build using the instructions from the main ",(0,r.jsx)(n.a,{href:"https://github.com/liamcottle/reticulum-meshchat/blob/master/README.md",children:"README.md"})]}),"\n",(0,r.jsx)(n.h3,{id:"sideband",children:"Sideband"}),"\n",(0,r.jsx)(n.p,{children:"Sideband is a Linux/Android/MacOS/Windows LXMF client.\nFor mobile connectivity or if you already have a transport node configured above on the network, you dont need to do the following.\nTo setup TCP connection to the test net:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"click the hamburger menu,"}),"\n",(0,r.jsxs)(n.li,{children:["click ",(0,r.jsx)(n.code,{children:"Connectivity"})]}),"\n",(0,r.jsxs)(n.li,{children:["enable ",(0,r.jsx)(n.code,{children:"Connect via TCP"})]}),"\n",(0,r.jsx)(n.li,{children:"TCP Host: RNS.MichMesh.net"}),"\n",(0,r.jsx)(n.li,{children:"TCP Port: 7822"}),"\n",(0,r.jsx)(n.li,{children:"x out of the config"}),"\n",(0,r.jsx)(n.li,{children:"restart Sideband.\nYou should now be seeing things show up in the announce stream."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"radio-interfaces",children:"Radio interfaces"}),"\n",(0,r.jsx)(n.h3,{id:"lora",children:"LoRa"}),"\n",(0,r.jsxs)(n.p,{children:["Reticulum is not like other meshes - the LoRa node acts more like a ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Terminal_node_controller",children:"TNC"})," - at current time, you need to install the ",(0,r.jsx)(n.a,{href:"https://liamcottle.github.io/rnode-flasher/",children:"rnode firmare"})," and create an ",(0,r.jsx)(n.a,{href:"https://reticulum.network/manual/interfaces.html#rnode-lora-interface",children:"interface in your config"}),".\n",(0,r.jsx)(n.a,{href:"https://github.com/markqvist/Reticulum/wiki/Popular-RNode-Settings#united-states",children:"We use the common settings for the US."}),"\nFor Sideband, connect to the rnode via bluetooth, then enable ",(0,r.jsx)(n.code,{children:"Connect via RNode"})," under connectivity, then restart sideband.\nFor rns/nomadnet/Meshchat, add the following connection to your ~/.reticulum/config"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[[RnodeUSB]]\n  type = RNodeInterface\n  interface_enabled = true\n  port = /path/to/usb/or/bluetooh/port\n  frequency = 914875000\n  bandwidth = 125000\n  txpower = 20\n  spreadingfactor = 8\n  codingrate = 5\n  name = RnodeUSB\n  selected_interface_mode = 1\n  configured_bitrate = None\n  mode = boundary\n"})}),"\n",(0,r.jsx)(n.h3,{id:"hf-freedv-tnc2-6792mhz---in-flux",children:"HF FreeDV-TNC2 6.792mhz - in flux"}),"\n",(0,r.jsxs)(n.p,{children:["Connect your radio to your computer using whatever radio interface you choose.\nFollow the install instructions for ",(0,r.jsx)(n.a,{href:"https://github.com/xssfox/freedvtnc2",children:"FreeDV-TNC2"}),"\nStart freedvtnc2 with the reqd sound options as well as the following ",(0,r.jsx)(n.code,{children:"--kiss-tcp-port 8001 --kiss-tcp-address 127.0.0.1"}),"\nadd the following to your ~/.reticulum/config interfaces"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[[TCP KISS Interface]]\n  type = TCPClientInterface\n  enabled = yes\n  kiss_framing = True\n  target_host = 127.0.0.1\n  target_port = 8001\n  mode = boundary\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var i=t(6540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);